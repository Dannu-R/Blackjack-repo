html, .game {
  margin: 0;
  padding: 0;
  min-height: 830px; /* Ensures the minimum height affects the viewport */
  min-width: 830px;
  height: 100%; /* Ensures the height covers the full viewport */
  overflow-x: auto; /* Prevents horizontal scrolling */
  overflow-y: auto; /* Allows vertical scrolling */
}


@font-face {
  font-family: 'Supercell Headline';
  src: url('path/to/Supercell-Headline.woff2') format('woff2'),
       url('path/to/Supercell-Headline.woff') format('woff'),
       url('path/to/Supercell-Headline.ttf') format('truetype');
  font-style: normal;
}

* {
  font-family: 'Supercell Headline', sans-serif;
  padding: 0;
  margin: 0;
  line-height: calc(1em + 0.5rem);
  transition: all 0.5s ease;
  box-sizing: border-box;
}

body {
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  text-align: center;
  /* align-items: center; */
  /* position: relative;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center; */
}

.welcome {
  text-align: center;
  margin-top: 5rem;
  font-size: 5rem;
  font-weight: 400;
}

@keyframes pop-up {
  from {
    opacity: 0;
    transform: translateY(900px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.blackjack-title {
  color: red;
  text-shadow: 0px 2px 10px rgba(255, 0, 0, 0.6);
  animation: pop-up 2s ease 1s forwards;
  transform: translateY(900px);
  font-size: 7rem;
  text-align: center;
  transform: translateY();
}

@keyframes start {
  from {
    opacity: 0;
    
  }

  to {
    opacity: 1;
    
  }
}

.start-btn {
  font-size: 2rem;
  opacity: 0;
  margin-top: 5rem;
  animation: start 1s ease 4s forwards;
  border: none;
  border-radius: 6px;
  background-color: white;
  padding: 0.5rem 1rem;
  /* box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.3); */
  margin-inline: auto;
  cursor: pointer;
}

.start-btn:hover {
  box-shadow: 0px 0px 10px rgba(255, 0, 0, 0.6);
  background-color: red;
  color: white;
  transform: translateY(-10px);
}

.game {
  display: none;
  opacity: 0;
}

.game.active {
  /* min-height: 830px; */
  padding: 1rem;
  width: 100vw;
 
  transition: all 0.5s ease;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-content: center;
  /* flex-wrap: wrap;
  gap: 1rem; */
  opacity: 1;
  background-image: url('./wood.jpg');
  background-repeat: no-repeat;
  background-size: cover;
}

@keyframes indicator {
  0% {
    width: 100%;
    background-color: transparent;
    box-shadow: none;
  }

  50% {
    width: 100%;
    background-color: red;
    box-shadow: 0px 0px 30px rgba(255, 0, 0, 0.6);
  }

  100% {
    width: 100%;
    background-color: transparent;
    box-shadow: none
  }
}

.turn {
  /* width: 100%; */
  margin-inline: auto;
  color: white;
  /* text-align: center;
  background-color: white;
  padding: 0.5rem 1rem;
  border-radius: 6px; */
}

.turn.change {
  animation: indicator 1s ease-in-out 0.3s forwards;
}



.dealer {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  transition: all 0.3s ease;
  background-color: green;
  border: 20px solid rgb(39, 21, 3);
  border-radius: 20px;
  padding: 2rem;
  position: relative;
  box-shadow: inset 0px 0px 20px rgba(0, 0, 0, 0.8);
}

.middle {
  width: 100%;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  transition: all 0.3s ease;
  z-index: 2;
}

.player {
  box-sizing: border-box;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  transition: all 0.3s ease;
  background-color: green;
  border: 20px solid rgb(39, 21, 3);
  border-radius: 20px;
  padding: 2rem;
  position: relative;
  box-shadow: inset 0px 0px 20px rgba(0, 0, 0, 0.8);
}

.bust::after {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  content: 'BUSTED!';
  
  font-size: 2rem;
  display: flex;
  align-items: center;
  color: red;
  justify-content: center;
}

.lose::after {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  content: 'LOST!';
  
  font-size: 2rem;
  display: flex;
  align-items: center;
  color: red;
  justify-content: center;
}

.win::after {
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  content: 'WON!';
  
  font-size: 2rem;
  display: flex;
  align-items: center;
  color: rgb(32, 169, 32);
  justify-content: center;
}

.btn {
  border: none;
  padding: 0.5rem 1rem;
  width: 100px;
  border-radius: 6px;
  background-color: white;
  color: black;
  cursor: pointer;
}

.btn:hover {
  color: white;
  background-color: red;
  box-shadow: 0px 0px 10px rgba(255, 0, 0, 0.6);
  transform: translateY(-5px);
  position: relative;
}

/* .draw {
  width: ;
  height: 100%;
} */

.draw:hover::after {
  padding: 0.5rem 1rem;
  opacity: 1;
  text-align: center;
  position: absolute;
  color: black;
  font-size: 0.75rem;
  content: 'Draw a random card from the deck! Remember: if your score goes over 21, you bust!';
  border-radius: 6px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.6);
  width: 300%;
  max-width: 30ch;
  line-height: 1rem;
  transform-origin: center;
  top: -80px;
  right: -88px;
  background-color: white;
}

.stay:hover::after {
  padding: 0.5rem 1rem;
  opacity: 1;
  text-align: center;
  position: absolute;
  color: black;
  font-size: 0.75rem;
  content: 'Ends your turn and lets the dealer draw cards until they beat your score or bust.';
  border-radius: 6px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.6);
  width: 300%;
  max-width: 30ch;
  line-height: 1rem;
  transform-origin: center;
  top: -80px;
  right: -88px;
  background-color: white;
}

.back {
  object-fit: contain;
  width: 100%;
  height: 100%;
}

.card.back {
  background-color: white;
  object-fit: contain;
  padding: 0.2em;
  border-radius: 10px;
  box-shadow: 0px 0px 30px rgba(0, 0, 0, 0.8);
  height: 150px;
  width: 90px;
}

.card {
  background-color: white;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 0.2em;
  border-radius: 10px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.6);
  height: 150px;
  width: 90px;
  position: relative;
}

.card.blank {
  background-color: transparent;
  box-shadow: none;
  height: 150px;
  width: 90px;
  padding: 0.2em;
  border-radius: 10px;
}


.card.deck::before {
  content: '';
  position: absolute;
  width: 102%;
  height: 15px;
  left: 50%;
  transform: translate(-50%) rotate(180deg);
  bottom: -7.5px;
  background-color: lightgray;
  z-index: -1;
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
  clip-path: polygon(10% 0%, 90% 0%, 100% 100%, 0% 100%);
}

.card.deck:hover{
  box-shadow: 0px 0px 30px rgba(255, 0, 0, 0.6)
}

.card.deck:hover::after {
  padding: 0.5rem 1rem;
  opacity: 1;
  text-align: center;
  position: absolute;
  color: black;
  font-size: 0.75rem;
  content: 'Holds all of the shuffled cards.';
  border-radius: 6px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.6);
  width: 300%;
  max-width: 30ch;
  line-height: 1rem;
  transform-origin: center;
  top: -50px;
  right: -88px;
  background-color: white;
}

.symbol-one {
  align-self: start;
  font-size: 1.2rem;
}

.symbol-two {
  align-self: center;
}

.symbol-three {
  rotate: 180deg;
  align-self: end;
  font-size: 1.2rem;
}

.red {
  color: red;
  fill: red;
}

.black {
  color: black;
  fill: black;
}

.ace {
  box-shadow: 0px 0px 30px rgba(255, 0, 0, 0.6);
}

.ace:hover::after {
  z-index: 3;
  padding: 0.5rem 1rem;
  opacity: 1;
  text-align: center;
  position: absolute;
  color: black;
  font-size: 0.75rem;
  content: "Ace cards have an automatically set value of 11 upon draw. If your score goes above 21, it will switch to a value of 1 if needed.";
  border-radius: 6px;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.6);
  width: 300%;
  max-width: 30ch;
  line-height: 1rem;
  transform-origin: center;
  top: -88px;
  right: -88px;
  background-color: white;
}

.score {
  margin-inline: auto;
  color: white;
  /* width: 100%;
  background-color: white;
  padding: 0.5rem 1rem;
  border-radius: 6px; */
}

.notification {
  width: auto;
  height: auto;
  z-index: 20;
  opacity: 1;
  background-color: white;
  border-radius: 6px;
  padding: 0.5rem 1rem;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  align-items: center;
  flex-wrap: wrap;
  gap: 1.25rem;
  position: absolute;
  top: -200px;
  left: 50%;
  transform: translate(-50%);
  transition: all 1s ease;
}

.notification.active {
  position: absolute;
  opacity: 1;
  top: 50%;
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%); /* Shift left by 50% of width and up by 50% of height */
  transition: all 1s ease;
}

.notification-title-win {
  font-size: 3rem;
  color: greenyellow;
}

.notification-text-win {
  font-size: 0.75rem;
  color: black;
  text-align: center;
}

.notification-btn-win {
  border: none;
  border-radius: 10px;
  color: black;
  padding: 0.5rem 1rem;
  background-color: white;
  align-self: stretch;
  cursor: pointer;
}

.notification-btn-win:hover {
  background-color: red;
  box-shadow: 0px 0px 5px rgba(255, 0, 0, 0.6);
  color: white;
  transform: translateY(-5px);
}

.notification-title-lose {
  font-size: 3rem;
  color: red;
}

.notification-text-lose {
  max-width: 20;
  font-size: 0.75rem;
  color: black;
  text-align: center;
}

.notification-btn-lose {
  border: none;
  color: black;
  padding: 0.5rem 1rem;
  background-color: white;
  align-self: stretch;
  cursor: pointer;
}

.notification-btn-lose:hover {
  background-color: red;
  color: white;
  border-radius: 10px;
  box-shadow: 0px 0px 30px rgba(255, 0, 0, 0.6);
  transform: translateY(-5px);
  
}